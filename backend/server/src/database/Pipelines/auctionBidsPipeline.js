const { Types } = require("mongoose");

// A MongoDB aggregation pipeline is a sequence of stages.
// Every stage receives in input a set of documents,
// applies some transformation, then pass the transformed document to the next stage
const pipeline = (id) => [
  // outputs all documents with the given id
  {
    $match: { auction: new Types.ObjectId(`${id}`) },
  },
  // Generate an join between the users collection and the collection that uses this pipeline (Bids in this case)
  {
    $lookup: {
      from: "users",
      localField: "user",
      foreignField: "_id",
      as: "user",
    },
  },
  // Destructure the array generated by the previous stage
  {
    $unwind: "$user",
  },
  // Removes the following field from the output document
  {
    $unset: [
      "user.password",
      "user.__v",
      "user.name",
      "user.surname",
      "user.bio",
      "auction",
      "updatedAt",
    ],
  },
  // Sort the document based of the amount field
  // -1 => Descending order
  // 1 => Ascending order
  // In this case the resulting array will have in the first position the most recent bid (the highest bid amount)
  {
    $sort: { amount: -1 },
  },
];

module.exports = pipeline;
