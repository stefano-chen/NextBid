const { Types } = require("mongoose");

// A MongoDB aggregation pipeline is a sequence of stages.
// Every stage receives in input a set of documents,
// applies some transformation, then pass the transformed document to the next stage
const pipeline = (id) => [
    // outputs all documents with the given id
    {
        $match: { _id: new Types.ObjectId(`${id}`) }
    },
    // Generate an join between the users collection and the collection that uses this pipeline (Bid in this case)
    {
        $lookup: {
            from: "users",
            localField: "user",
            foreignField: "_id",
            as: "user",
        },
    },
    // Destructure the array generated by the previous stage
    { $unwind: "$user" },
    // Generate an join between the auctions collection and the collection that uses this pipeline (Bid in this case)
    {
        $lookup: {
            from: "auctions",
            localField: "auction",
            foreignField: "_id",
            as: "auction",
        },
    },
    // Destructure the array generated by the previous stage
    { $unwind: "$auction" },
    // Select with field to show in the output document
    // 1 => field selected
    // 0 => field removed
    {
        $project: {
            amount: 1,
            "user._id": 1,
            "user.username": 1,
            "auction._id": 1,
            "auction.title": 1,
            "auction.dueDate": 1,
            "auction.owner": 1,
        },
    },
];

module.exports = pipeline;
